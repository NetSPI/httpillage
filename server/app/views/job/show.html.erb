<div class="row">
	<div class="col-lg-12">
		<h1 class="page-title">
		[<%= @job.attack_type %>]
		Viewing 
			<span class="<%= @job.status == "active" ? "active-job-label" : "inactive-job-label" %>">
				<%= @job.status %> 
			</span>

			Job: #<%= @job.id %></h1>
		<%= link_to edit_job_path(@job) do %>
			<button class="button-primary page-task-button">Edit Job</button>
		<% end %>
		<div style="margin-top:-30px;margin-bottom:30px;">
		<em><%= @job.description %></em><br /><br />
		<b><%= @job.http_method %></b> <%= @job.http_uri %><br /><br />

		<% if @job.attack_type == "bruteforce" %>
		Completion Percentage: <span id="completion-percentage"><%= @bruteforce_percentage %></span>% - Computing <span id="keyspace_start"><%=@keyspace_start_val %></span> to <span id="keyspace_end"><%= @keyspace_end_val %></span>
		<% end %>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-lg-6">
		<div class="item">
			<p class="item-title">HTTP Headers</p>
			<pre><%= @job.http_headers %></pre>
		</div>

		<% if @job.http_data != ""%>
		<div class="item">
			<p class="item-title">Post Data</p>
			<pre><%= @job.http_data %></pre>
		</div>
		<% end %>
	</div>

	<div class="col-lg-6">
		<div class="item">
			<p class="item-title">Latest Updates on Associated Nodes - <%= link_to 'Export All', export_node_status_path(@job, :format => :csv) %></p>

			<% if @job.node_status_checkins.count > 0 %>
				<table class="table table-striped node-checkins">
				<thead>
				<tr>
					<th>Node ID</th>
					<th>Status Code</th>
					<th>Time</th>
				</tr>
				</thead>
				<tbody>
				<% @node_statuses.each do |status| %>
				<tr>
					<td><%= status.node_id %></td>
					<td class="job-response-code"><%= status.response_code %></td>
					<td><%= status.created_at %></td>
				</tr>
				<% end %>
				</tbody>
				</table>
					<% else %>
		There are no updates for this job
	<% end %>
		</div>
	</div>


	<div class="col-lg-6">
		<div class="item">
			<p class="item-title">Job responses</p>
				<% if @job.job_responses.count > 0 %>
				<table class="table table-striped job-responses">
				<thead>
				<tr>
					<th>ID</th>
					<th>Node ID</th>
					<th>Status Code</th>
					<th>Time</th>
				</tr>
				</thead>
				<tbody>

				<% 
				# TODO: Make this use some sort of pagination. For now we're only showing 5.
				i = 0
				@job.job_responses.each do |response| %>
				<tr class='job-response' data-id='<%= response.id %>'>
					<td><%= response.id %></td>
					<td><%= response.nodeid %></td>
					<td><%= response.code %></td>
					<td><%= response.created_at %></td>
				</tr>
				<% 
				i += 1
				break if i == 5
				end %>
				</tbody>
				</table>
			<% else %>
				There are no responses for this job
			<% end %>
		</div>
	</div>

	<div class="col-lg-6" id="response-container" style="display:none;">
		<div style="width:100%; float:right">
			<b>Viewing response: <span id="response-id"></span></b>
		</div>
		<pre id="http-response">
		</pre>
	</div>
</div>

	<div class="col-lg-6">
		<div class="item">
			<p class="item-title">Job Matches -- <%= link_to 'Export All', export_job_matches_path(@job, :format => :csv) %></p>
				<% if @job.response_flags.count > 0 %>
				<table class="table table-striped response-matches">
				<thead>
				<tr>
					<th>Payload</th>
					<th>Matched String</th>
					<th>Time</th>
				</tr>
				</thead>
				<tbody>

				<% 
				# TODO: Make this use some sort of pagination. For now we're only showing 5.
				i = 0
				@job.response_flags.each do |flag| %>
				<tr class='job-flag' data-id='<%= flag.id %>'>
					<td><%= flag.payload %></td>
					<td><%= flag.matched_string %></td>
					<td><%= flag.created_at %></td>
				</tr>
				<% 
				i += 1
				break if i == 5
				end %>
				</tbody>
				</table>
			<% else %>
				There are no flags for this job
			<% end %>
		</div>
	</div>

	<div class="col-lg-6" id="response-container" style="display:none;">
		<div style="width:100%; float:right">
			<b>Viewing flagged response response: <span id="response-id"></span></b>
		</div>
		<pre id="http-response">
		</pre>
	</div>
</div>

<script>
var lastCheckinTimestamp = "<%= DateTime.now %>";
<% if @job.attack_type == "bruteforce" %>
	// Poll for updated bruteforce status
	window.setInterval(function () {
		$.get('/job/<%= @job.id %>/progress', function(data) {
			$("#completion-percentage").text(data.keyspace_progress);
			$("#keyspace_start").text(data.keyspace_start);
			$("#keyspace_end").text(data.keyspace_end);
		});
	}, 1000)
<% end %>

// Poll for updated node checkins
	window.setInterval(function () {
		$.get('/job/<%= @job.id %>/checkins/poll/' + lastCheckinTimestamp, function(data) {
			lastCheckinTimestamp = data.newTimestamp;

			for (idx in data.checkins) {
				row = data.checkins[idx];

				row.response_code = formatResponseCode(row.response_code);
				row = "<tr><td>" + row.node_id + "</td><td>" + row.response_code + "</td><td>" + row.created_at + "</td> </tr>";
				$(".node-checkins tbody").prepend(row);
			}
		// Chop rows to 5.
		$(".node-checkins tbody").find("tr:gt(4)").remove();
		});
	}, 5000)

	// Poll for updated matches
	window.setInterval(function () {
		console.log("triggered");
		$.get('/job/response/<%= @job.id %>/poll/' + lastCheckinTimestamp, function(data) {
			lastCheckinTimestamp = data.newTimestamp;

			for (idx in data.matches) {
				row = data.matches[idx];

				row = "<tr><td>" + row.payload + "</td><td>" + row.matched_string + "</td><td>" + row.created_at + "</td> </tr>";
				$(".response-matches tbody").prepend(row);
			}
		// Chop rows to 5.
		$(".response-matches tbody").find("tr:gt(4)").remove();
		});
	}, 5000)

	$(".job-response").click(function () {
		$("#response-container").show();
		var responseId = $(this).data("id");

		// Make ajax request
		$.get("/job/response/" + responseId, function(data) {
			console.log(data.response);
			$("#response-id").text(responseId);
			$("#http-response").text(data.response);
		});

		$('html, body').animate({
        scrollTop: $(".job-responses").offset().top
    }, 200);
	});

	$(".job-flag").click(function () {
		$("#response-container").show();
		var flagId = $(this).data("id");

		// Make ajax request
		$.get("/job/response/fromMatch/" + flagId, function(data) {
			console.log(data.response);
			$("#response-id").text(flagId);
			$("#http-response").text(data.http_response);
		});

		$('html, body').animate({
        scrollTop: $(".job-responses").offset().top
    }, 200);

	});

	// Format each response code status
	$(document).ready(function () {
		$(".job-response-code").each(function () {
			$(this).html(formatResponseCode($(this).html()));
		});
	})

	function formatResponseCode(code) {
		if(code == 0) {
			return '<span class="error-label">No Response</span>';
		} else if (/^2[0-9]{2}$/.test(code)) {
			return '<span class="success-label"><b>' + code + '</b></span>';
		} else if (/^3[0-9]{2}$/.test(code)) {
			return '<span class="success-label">' + code + '</span>';
		} else {
			return '<span class="error-label">' + code +'</span>';
		}
	}
</script>