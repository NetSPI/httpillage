<p>Use <code>{P}</code> as a payload marker</p>

<div class="row">
  <%= form_for(@job, :html => {class: 'col-lg-6 create-form'}) do |f| %>

  <label for="method">HTTP Method</label>
  <%= f.select("http_method", options_for_select([['GET', 'GET'], ['POST', 'POST'], ["PUT", "PUT"], ["PATCH", "PATCH"], ["DELETE", "DELETE"]])) %>

  <label for="uri">HTTP URI</label>
  <%= f.text_field :http_uri, {:class => 'input-field' } %>

  <label for="header">HTTP Headers</label>
  <%= f.text_area :http_headers, {:class => 'input-field', :size => '50x6'} %>

  <label for="data">HTTP Post Data</label>
  <%= f.text_area :http_data, {:class => 'input-field', :size => '50x6'} %>

  <label for="type">Attack Type</label>
  <%= f.select(:attack_type, options_for_select([['Repeat', 'repeat'], ['Dictionary', 'dictionary']])) %>

  <label for="response">Response Storage?</label>
  <%= f.select(:attack_mode, options_for_select([['None', 'none'], ['Store Full', 'store']])) %>

  <label for="dictionary">Dictionary</label>
  <%=
  select("job", "dictionary_id", @dictionaries.all.collect {|d| [ d.original_filename, d.id ] }, {prompt: 'Select Dictionary'})
  %>

  <label for="status">Job Status</label>
  <%= f.select(:status, options_for_select([['Start', 'active'], ['Pending', 'pending']])) %>


  <%= submit_tag "Submit", class: 'button-primary' %>
  <% end %>
</div>